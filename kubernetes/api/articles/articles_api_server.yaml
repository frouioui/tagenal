apiVersion: apps/v1
kind: Deployment
metadata:
  name: articles-api
  annotations:
    "sidecar.jaegertracing.io/inject": "jaeger-prod"
  labels:
    api: articles
    app: articles-api
    tier: backend
spec:
  selector:
    matchLabels:
      app: articles-api
      tier: backend
  replicas: 2
  strategy:
    rollingUpdate:
      # Surge 1/2 should not affect resources much, considering the replicas
      # count is not supposed to increase by much.
      maxSurge: 50%
      maxUnavailable: 0
    type: RollingUpdate
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 240
  template:
    metadata:
      labels:
        app: articles-api
        tier: backend
      annotations:
        kubernetes.io/change-cause: "Addition of liveness and readiness probes"
    spec:
      containers:
        - name: articles-api-server
          image: frouioui/tagenal-articles-service:latest
          livenessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 1
              failureThreshold: 3
          readinessProbe:
              httpGet:
                path: /ready
                port: 8080
              initialDelaySeconds: 1
              periodSeconds: 1
              timeoutSeconds: 1
              failureThreshold: 3
              successThreshold: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          ports:
            - name: grpc
              containerPort: 9090
            - name: http
              containerPort: 8080
          env:
            - name: JAEGER_SERVICE_NAME
              value: "api-articles"
            - name: REDIS_MASTER_HOSTNAME
              value: "redis-cluster.redis"
            - name: REDIS_MASTER_PORT
              value: "6379"
---
apiVersion: v1
kind: Service
metadata:
  name: articles-api
  labels:
    app: article-api
    api: articles
    tier: backend
spec:
  selector:
    app: articles-api
    tier: backend
  ports:
    - port: 9090
      targetPort: 9090
      name: grpc
    - port: 8080
      targetPort: 8080
      name: http
